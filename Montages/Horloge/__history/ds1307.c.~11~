#include "ds1307.h"

int8 clk_last[3], 
     clk_data[3];
     
int bcd2dec(int val) {
   return (val >> 4) * 10 + (val & 0x0f);
}

int dec2bcd(int val) {
   return ((val / 10) << 4) + (val % 10);   
}

int clk_event() {
   int change;
   
   change = CLK_NO_CHANGE;
   if (clk_last[HOUR] != clk_data[HOUR])        change |= CLK_HOUR_CHANGED;
   if (clk_last[MINUTE] != clk_data[MINUTE])    change |= CLK_MINUTE_CHANGED;
   if (clk_last[SECOND] != clk_data[SECOND])    change |= CLK_SECOND_CHANGED;
   return change;
}

void clk_init() {
   memset(clk_last, 0, sizeof(clk_last));
   memset(clk_data, 0, sizeof(clk_data));
}

void clk_start() {
   bit_clear(clk_data[SECOND], CLK_HALT_BIT);
   clk_write();
}

void clk_stop() {
   bit_set(clk_data[SECOND], CLK_HALT_BIT);
   clk_write();
}

int  clk_is_started() {   
   return (!bit_test(clk_data[SECOND], CLK_HALT_BIT));
}

void clk_set_time(int hr, int mn) {
   clk_data[HOUR] = hr;
   clk_data[MINUTE] = mn;
   clk_data[SECOND] = 0;
   
   clk_write();
}

int clk_read() {
   int i, v;   
   
   memcpy(clk_last, clk_data, sizeof(clk_data));
   
   i2c_start();
   i2c_write(CLK_ADDRESS);
   i2c_write(0);
   i2c_start();
   i2c_write(CLK_ADDRESS_RD);
   
   for (i = 0; i < 3 ; i++) {
      clk_data[i] = i2c_read(i != 3);
   }
      
   i2c_stop();
   
   for (i = 0; i < 3 ; i++) {
      clk_data[i] = bcd2dec(clk_data[i]);
   }
   
   return clk_event();
}

void clk_write() {
   int i;
   
   i2c_start();
   i2c_write(CLK_ADDRESS);
   i2c_write(0);
   
   for (i = 0; i < 3 ; i++) {
      i2c_write(clk_data[i]);
   }
   
   i2c_stop();
}


