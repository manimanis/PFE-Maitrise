#include <main.h>
#include <ds1307.c>

#define FRACTIONS 76
#define ADD_VALUE 301
#define SUB_VALUE 723

int cntfs, cnts;
int mode = 0;

int display[4];

int16 somme = 0;

int convert(int v) {
   switch(v) {
      case 0: return 0xEE;
      case 1: return 0x22;
      case 2: return 0xD6;
      case 3: return 0x76;
      case 4: return 0x3A;
      case 5: return 0x7C;
      case 6: return 0xFC;
      case 7: return 0x2E;
      case 8: return 0xFE;
      case 9: return 0x7E;
   }
   return 0x00;
}

void serialize_data() {
   int j, i, v, octet;
   
   for (j = 0 ; j < 4 ; j++) {
      octet = display[j];
      v = 0x80;
      for (i = 0 ; i < 8 ; i++) {
         if (octet & v) {
            output_high(DATA);
         } else {
            output_low(DATA);
         }
         output_high(CLK);
         output_low(CLK);
         v = v >> 1;
      }
   }
   output_high(STB);
   output_low(STB);
}

void clk_changed(int v) {
   int i;
   
   if (v & CLK_MINUTE_CHANGED) {
      output_toggle(DOTS_IN);
      display[0] = convert(clk_data[MINUTE] & 0x0f);
      display[1] = convert((clk_data[MINUTE] >> 4) & 0x0f);
      display[2] = convert(clk_data[HOUR] & 0x0f);
      display[3] = convert((clk_data[HOUR] >> 4) & 0x0f);
      serialize_data();
   }
}

#int_timer0
void timer0_isr() {
   int v;
   if (mode == 0) {
      if (cntfs > 37) {
         output_high(DOTS_IN);
      } else {
         output_low(DOTS_IN);
      }
      
      if (cntfs == 0) {
         if (cnts == 0) {
            v = clk_read();
            if (v) clk_changed(v);
            
            cnts = 60 - bcd2dec(clk_data[SECOND]);
         } else {
            cnts--;
         }
         
         if (somme <= SUB_VALUE) {
            cntfs = FRACTIONS;
            somme += ADD_VALUE;
         } else {
            cntfs = FRACTIONS + 1;
            somme -= SUB_VALUE;
         }
         
         if (somme == 0) {
            
         }
      } else {
         cntfs--;
      }
   }   
}

void main() {
   
   delay_ms(2000);
   
   clk_init();
   clk_read();
   if (!clk_is_started()) {
      clk_start();
   }
   setup_timer_0(RTCC_INTERNAL | RTCC_DIV_256);
   
   cntfs = FRACTIONS;
   cnts = 60 - bcd2dec(clk_data[SECOND]);
   
   output_toggle(DOTS_IN);
   display[0] = convert(clk_data[MINUTE] & 0x0f);
   display[1] = convert((clk_data[MINUTE] >> 4) & 0x0f);
   display[2] = convert(clk_data[HOUR] & 0x0f);
   display[3] = convert((clk_data[HOUR] >> 4) & 0x0f);
   serialize_data();
      
   enable_interrupts(INT_TIMER0);
   enable_interrupts(GLOBAL);
   
   while(TRUE){
      
   }

}
